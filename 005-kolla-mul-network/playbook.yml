---
- hosts: all
  sudo: yes

  vars:
    systemd_docker_../config_directory: /etc/systemd/system/docker.service.d
    network_interface:          enp0s8
    neutron_external_interface: enp0s9
    kolla_internal_vip_address: "{{ '.'.join(vars['ansible_' + vars['network_interface']]['ipv4']['address'].split('.')[:3] + ['222']) }}"
    external_ip: "{{ '.'.join(vars['ansible_' + vars['neutron_external_interface']]['ipv4']['address'].split('.')[:3]) }}"
    ext_net_cidr:    "{{ external_ip }}.0/24"
    ext_net_range:   "start={{ external_ip }}.100,end={{ external_ip }}.200"
    ext_net_gateway: "{{ external_ip }}.1"
  tasks:
    - name: Install list of packages
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - epel-release
        - python-pip
        - python-devel
        - libffi-devel
        - gcc
        - openssl-devel
        - libselinux-python
        - ntp
    - name: Ensure the ssh folder exist under root
      file: path=/root/.ssh state=directory
    - name: Copy the ssh id_rsa
      copy:
        src: ../config/id_rsa
        dest: /root/.ssh/id_rsa
        force: yes
        mode: 0600
    - name: Copy the authorized_keys
      copy:
        src: ../config/authorized_keys
        dest: /root/.ssh/authorized_keys
        force: yes
        mode: 0644
    - name: Make the root ssh client no checking
      lineinfile:
        path: /etc/ssh/ssh_../config
        regexp: '^StrictHostKeyChecking'
        line: 'StrictHostKeyChecking no'
    - name: Make the root ssh remote workable
      lineinfile:
        path: /etc/ssh/sshd_../config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin yes'
    - name: Make sure the root bashrc
      copy:
        src: ../config/bashrc
        dest: ~/.bashrc
        force: yes
    - name: Make sure the pip folder
      file:
        path: ~/.pip
        state: directory
    - name: pip mirror
      copy:
        src: ../config/pip.conf
        dest: ~/.pip/pip.conf
        force: yes
    - name: Install Pip Packages
      pip:
        name: "{{ item }}"
        state: present
      with_items:
        - docker
        - docker-py
    - name: Diable selinux
      selinux:
        state: disabled
    - name: Make sure some service is disabled
      systemd:
        state: stopped
        name: "{{ item }}"
      with_items:
        - firewalld
    - name: Ensure docker and dependencies are installed
      yum:
        list: "docker-ce"
      register: pkg
    - name: Install docker rpm from a remote repo
      yum:
        name: /vagrant/docker-ce-17.06.0.ce-1.el7.centos.x86_64.rpm
        state: present
      when: pkg.results|selectattr("yumstate", "match", "installed")|list|length == 0
    - name: Ensure docker.service directory is existed
      file:
        path: "{{ systemd_docker_../config_directory }}"
        state: directory
    - name: Ensure kolla.conf had contents
      copy:
        src: ../config/kolla.conf
        dest: "{{ systemd_docker_../config_directory }}/kolla.conf"
        force: yes
    - name: Ensure docker.etc directory is existed
      file:
        path: "/etc/docker"
        state: directory
    - name: Ensure docker.json had contents
      copy:
        src: ../config/daemon.json
        dest: /etc/docker/daemon.json
        force: yes
    - name: Restart docker systemd to take effect
      systemd:
        state: started
        enabled: yes
        daemon_reload: yes
        name: docker
    - name: Make sure ntp is running
      systemd:
        state: started
        name: ntpd
    - name: Modify the etc hosts file
      copy:
        src: ../config/hosts
        dest: /etc/hosts
        force: yes
