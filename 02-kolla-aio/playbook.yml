---
- hosts: all
  sudo: yes

  vars:
    systemd_docker_config_directory: /etc/systemd/system/docker.service.d
    network_interface:          enp0s8
    neutron_external_interface: enp0s9
    kolla_internal_vip_address: "{{ '.'.join(vars['ansible_' + vars['network_interface']]['ipv4']['address'].split('.')[:3] + ['222']) }}"
    external_ip: "{{ '.'.join(vars['ansible_' + vars['neutron_external_interface']]['ipv4']['address'].split('.')[:3]) }}"
    ext_net_cidr:    "{{ external_ip }}.0/24"
    ext_net_range:   "start={{ external_ip }}.100,end={{ external_ip }}.200"
    ext_net_gateway: "{{ external_ip }}.1"
    pypi_packages:
      - http://10.0.111.111:5001/ansible-2.3.1.0.tar.gz
      - http://10.0.111.111:5001/docker-2.5.0-py2.py3-none-any.whl
      - http://10.0.111.111:5001/python-openstackclient-3.12.0.tar.gz
      - http://10.0.111.111:5001/kolla-ansible-4.0.2.tar.gz
    rpm_packages:
      - http://10.0.111.111:5001/docker-ce-17.06.0.ce-1.el7.centos.x86_64.rpm
      - http://10.0.111.111:5001/python2-pip-8.1.2-5.el7.noarch.rpm
      - http://10.0.111.111:5001/libffi-devel-3.0.13-18.el7.x86_64.rpm
      - http://10.0.111.111:5001/gcc-4.8.5-11.el7.x86_64.rpm
      - http://10.0.111.111:5001/openssl-devel-1.0.1e-60.el7.x86_64.rpm
      - http://10.0.111.111:5001/libselinux-python-2.5-6.el7.x86_64.rpm
      - http://10.0.111.111:5001/ca-certificates-2017.2.14-70.1.el7_3.noarch.rpm
      - http://10.0.111.111:5001/ntp-4.2.6p5-25.el7.centos.x86_64.rpm
      - http://10.0.111.111:5001/python-devel-2.7.5-48.el7.x86_64.rpm
  tasks:
    - name: Make sure the root bashrc
      copy:
        src: ../config/bashrc
        dest: ~/.bashrc
        force: yes
    - name: Install list of packages from local
      yum:
        name: "{{ item }}"
        state: present
      with_items: "{{ rpm_packages }}"
    - name: Install Pip Packages
      pip:
        name: "{{ item }}"
        state: present
      with_items: "{{ pypi_packages }}"
    - name: Make sure ntp is running
      systemd:
        state: started
        name: ntpd
    - name: Make sure firewalld is disabled
      systemd:
        state: stopped
        name: firewalld
    - name: Diable selinux
      selinux:
        state: disabled
    - name: Ensure docker.service directory is existed
      file:
        path: "{{ systemd_docker_config_directory }}"
        state: directory
    - name: Ensure kolla.conf had contents
      copy:
        src: ../config/kolla.conf
        dest: "{{ systemd_docker_config_directory }}/kolla.conf"
        force: yes
    - name: Ensure docker.etc directory is existed
      file:
        path: "/etc/docker"
        state: directory
    - name: Ensure docker.json had contents
      copy:
        src: ../config/daemon.json
        dest: /etc/docker/daemon.json
        force: yes
    - name: Find out the vm support
      shell: |
        egrep -c '(vmx|svm)' /proc/cpuinfo
      register: vm_num
      ignore_errors: yes
    - name: Ensure nova-compute.conf had folder
      file:
        path: /etc/kolla/config/nova
        state: directory
      when: vm_num.stdout|int == 0
    - name: Ensure nova-compute.conf had contents
      copy:
        src: ../config/nova-compute.conf
        dest: /etc/kolla/config/nova/nova-compute.conf
      when: vm_num.stdout|int == 0
    - name: Ensure config had folder
      file:
        path: /etc/kolla/config/
        state: directory
    - name: Ensure ceph.conf had contents
      copy:
        src: ../config/ceph.conf
        dest: /etc/kolla/config/ceph.conf
    - name: Restart docker systemd to take effect
      systemd:
        state: started
        enabled: yes
        daemon_reload: yes
        name: docker
    - name: Ensure the target folder existed
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - /etc/kolla
        - /root/inventory
    - name: Get contents from /usr/share/kolla-ansible
      shell: |
        cp -r /usr/share/kolla-ansible/etc_examples/kolla/* /etc/kolla/
        cp -r /usr/share/kolla-ansible/ansible/inventory/all-in-one /root/inventory/all-in-one
    - name: Modify /etc/kolla/globals.yml
      lineinfile:
        path: /etc/kolla/globals.yml
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^network_interface',          line: 'network_interface:          "{{ network_interface          }}"'}
        - { regexp: '^neutron_external_interface', line: 'neutron_external_interface: "{{ neutron_external_interface }}"'}
        - { regexp: '^kolla_internal_vip_address', line: 'kolla_internal_vip_address: "{{ kolla_internal_vip_address }}"'}
        - { regexp: '^keystone_admin_password',    line: 'keystone_admin_password: welcome'} # only source deploy can use this password
        - { regexp: '^openstack_release',          line: 'openstack_release: 4.0.3'}
        - { regexp: '^docker_registry',            line: 'docker_registry: 10.0.111.111:5000'}
        - { regexp: '^docker_namespace',           line: 'docker_namespace: lokolla'}
        - { regexp: '^kolla_install_type',         line: 'kolla_install_type: binary'}
        - { regexp: '^enable_cinder',              line: 'enable_cinder: "yes"'}
        - { regexp: '^enable_ceph',                line: 'enable_ceph: "yes"'}
        - { regexp: '^enable_ceph_rgw',            line: 'enable_ceph_rgw: "yes"'}
    - name: Gen password for /etc/kolla/passwords.yml
      shell: |
        kolla-genpwd
    - name: Get the cirros image first
      get_url:
        url: http://10.0.111.111:5001/cirros-0.3.5-x86_64-disk.img
        dest: /usr/share/cirros-0.3.5-x86_64-disk.img
        mode: 644
    - name: Modify /usr/share/kolla-ansible/init-runonce
      lineinfile:
        path: /usr/share/kolla-ansible/init-runonce
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^EXT_NET_CIDR',    line: 'EXT_NET_CIDR="{{    ext_net_cidr    }}"'}
        - { regexp: '^EXT_NET_RANGE',   line: 'EXT_NET_RANGE="{{   ext_net_range   }}"'}
        - { regexp: '^EXT_NET_GATEWAY', line: 'EXT_NET_GATEWAY="{{ ext_net_gateway }}"'}
        - { regexp: 'ssh-keygen -t rsa -f ~/.ssh/id_rsa', line: '    ssh-keygen -t rsa -f ~/.ssh/id_rsa -N "" '}
