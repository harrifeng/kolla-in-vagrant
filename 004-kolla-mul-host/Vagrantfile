# Require the reboot plugin. selinux need to reboot to make sure it is closed
require './vagrant-provision-reboot-plugin'

hosts = [
  ["kolla-mul-controller", 1, 40],
  ["kolla-mul-network",    1, 50],
  ["kolla-mul-compute",    1, 60],
  ["kolla-mul-monitoring", 1, 70],
  ["kolla-mul-storage",    1, 80],
]

Vagrant.configure("2") do |config|

  hosts.each do |hostname, num, ip_start|
    num.each do |j|
      config.vm.define "#{hostname}-#{i+1}" do |app|
        app.vm.provider "virtualbox" do |vb|
          vb.gui = false
          vb.memory = "20480"
          vb.cpus = 8
        end

        app.vm.hostname = "#{hostname}-#{i+1}"
        app.vm.box = "bento/centos-7.3"
        if Vagrant.has_plugin?("vagrant-cachier")
          config.cache.scope = :box
          config.cache.synced_folder_opts = {
            type: :nfs,
            mount_options: ['rw', 'vers=3', 'tcp', 'nolock']
          }
        end
        app.vm.box_check_update = false
        app.ssh.insert_key = false
        app.ssh.private_key_path = ['~/.vagrant.d/insecure_private_key']
        app.vm.network "private_network",  ip: "10.0.23.#{ipstart+i+1}"
        app.vm.network "private_network",  ip: "10.0.25.#{ipstart+i+1}"
        app.vm.provision "file", source: "~/.vagrant.d/insecure_private_key", destination: "~/.ssh/id_rsa"
        app.vm.provision "ansible" do |ansible|
          ansible.verbose  = "v"
          ansible.playbook = "playbook.yml"
          ansible.sudo = true
        end
        app.vm.provision :unix_reboot
      end
    end
  end
end
