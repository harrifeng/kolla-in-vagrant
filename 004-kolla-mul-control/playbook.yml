---
- hosts: all
  sudo: yes

  vars:
    systemd_docker_config_directory: /etc/systemd/system/docker.service.d
  tasks:
    - name: Install list of packages
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - epel-release
        - python-devel
        - libffi-devel
        - gcc
        - openssl-devel
        - libselinux-python
        - traceroute
        - ca-certificates
        - ntp
    - name: Copy the ssh folder
      copy:
        src: dotssh/
        dest: /root/.ssh/
        force: yes
    - name: Make the root ssh remote workable
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin yes'
    - name: Restart sshd serverce
      systemd:
        name: sshd
        state: started
        daemon_reload: yes
        enabled: yes
    - name: Make sure the root bashrc
      template:
        src: bashrc.j2
        dest: ~/.bashrc
        force: yes
    - name: Diable selinux
      selinux:
        state: disabled
    - name: Make sure some service is disabled
      systemd:
        state: stopped
        name: "{{ item }}"
      with_items:
        - firewalld
    - name: Ensure docker and dependencies are installed
      yum:
        list: "docker-ce"
      register: pkg
    - name: Install docker rpm from a remote repo
      yum:
        name: /vagrant/docker-ce-17.06.0.ce-1.el7.centos.x86_64.rpm
        state: present
      when: pkg.results|selectattr("yumstate", "match", "installed")|list|length == 0
    - name: Ensure docker.service directory is existed
      file:
        path: "{{ systemd_docker_config_directory }}"
        state: directory
    - name: Ensure kolla.conf had contents
      template:
        src: kolla.conf.j2
        dest: "{{ systemd_docker_config_directory }}/kolla.conf"
        force: yes
    - name: Ensure docker.etc directory is existed
      file:
        path: "/etc/docker"
        state: directory
    - name: Ensure docker.json had contents
      template:
        src: daemon.json.j2
        dest: /etc/docker/daemon.json
        force: yes
    - name: Find out the vm support
      shell: |
        egrep -c '(vmx|svm)' /proc/cpuinfo
      register: vm_num
      ignore_errors: yes
    - name: Restart docker systemd to take effect
      systemd:
        state: started
        enabled: yes
        daemon_reload: yes
        name: docker
    - name: Make sure ntp is running
      systemd:
        state: started
        name: ntpd
